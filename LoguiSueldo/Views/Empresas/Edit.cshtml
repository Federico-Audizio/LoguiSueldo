@model Empresa

@{
    ViewBag.Title = "Editar";
}

<div>
    <section class="content-header">
        <h1>
            EMPRESA
            <small>Edición de Empresa</small>
        </h1>
    </section>
    <section class="content">

        <a id="atras" class="btnPosicion1" href="~/Empresas/Index" title="Volver">
            <i class="fa fa-arrow-left"></i>
        </a>

        <div>

                @using (Html.BeginForm("Edit", "Empresas", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="tab-content" style="background-color: #ecf0f5;">
                        <div class="tab-pane active" id="tab_1">
                            <div class="row">
                                <div style="margin-top:10px;">
                                    <div class="col-md-12">
                                        <div class="panel panel-default">
                                            <div class="panel-heading" style="font-size:16px; font-weight:bold; height:32px">
                                                <div style="margin:-5px 0 0 -3px">Datos generales</div>
                                            </div>
                                            <div style="margin:5px 10px 10px 10px">

                                                @Html.AntiForgeryToken()

                                                <div class="form-horizontal">

                                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                    @Html.HiddenFor(model => model.EmpresaID, new { htmlAttributes = new { @id = "EmpresaID" } })

                                                    <div class="form-group">
                                                        <div class="col-md-4 col-sm-4 col-xs-12">
                                                            @Html.LabelFor(model => model.RazonSocial, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", autofocus = "true", @style = "text-transform:uppercase;", @onKeyUp = "maximo(this,100);", @onKeyDown = "maximo(this,100);" } })
                                                            @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-4 col-sm-4 col-xs-6">
                                                            @Html.LabelFor(model => model.NombreFantasia, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.NombreFantasia, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @onKeyUp = "maximo(this,50);", @onKeyDown = "maximo(this,50);" } })
                                                            @Html.ValidationMessageFor(model => model.NombreFantasia, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-4 col-sm-4 col-xs-6">
                                                            @Html.LabelFor(model => model.Telefono1, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.Telefono1, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", type = "tel" } })
                                                            @Html.ValidationMessageFor(model => model.Telefono1, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="col-md-4 col-sm-4 col-xs-12">
                                                            @Html.LabelFor(model => model.LocalidadID, "Localidad", htmlAttributes: new { @class = "control-label" })
                                                            <input type="hidden" id="LocalidadID" name="LocalidadID" value="@ViewBag.LocalidadID" />
                                                            <input type="text" id="LocalidadNombre" class="form-control" value="@ViewBag.LocalidadNombre" placeholder="Ingrese el nombre de la localidad" onclick="this.select()" style="text-transform:uppercase;" />
                                                        </div>
                                                        <div class="col-md-4 col-sm-4 col-xs-6">
                                                            @Html.LabelFor(model => model.DireccionReal, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.DireccionReal, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @style = "text-transform:uppercase;" } })
                                                            @Html.ValidationMessageFor(model => model.DireccionReal, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-4 col-sm-4 col-xs-6">
                                                            @Html.LabelFor(model => model.CorreoElectronico, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.CorreoElectronico, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @style = "text-transform:lowercase;" } })
                                                            @Html.ValidationMessageFor(model => model.CorreoElectronico, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="col-md-4 col-sm-4 col-xs-12">
                                                            @Html.LabelFor(model => model.TipoContribuyenteID, htmlAttributes: new { @class = "control-label" })
                                                            @Html.DropDownList("TipoContribuyenteID", null, htmlAttributes: new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.TipoContribuyenteID, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-4 col-sm-4 col-xs-6">
                                                            @Html.LabelFor(model => model.TipoDocumentoID, htmlAttributes: new { @class = "control-label" })
                                                            @Html.DropDownList("TipoDocumentoID", null, htmlAttributes: new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.TipoDocumentoID, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-4 col-sm-4 col-xs-6">
                                                            @Html.LabelFor(model => model.NroTipoDocumento, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.NroTipoDocumento, new { htmlAttributes = new { @class = "form-control", @id = "NroTipoDocumento", autocomplete = "off", type = "tel" } })
                                                            @Html.ValidationMessageFor(model => model.NroTipoDocumento, "", new { @class = "text-danger" })
                                                            <p class="aclaracion-input">*Sólo números.</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                    </div>

                    <button type="submit" title="Guardar" id="btn-submit" onclick="OcultarSubmit();" class="btnPosicion2"> <i class="glyphicon glyphicon-ok"></i> </button>
                }
        </div>


    </section>
</div>


@section Scripts{
    @* MASCARAS DE INPUT *@
    <script src="~/Scripts/Mascaras/jquery.maskedinput.min.js"></script>

    @*<script src="~/Scripts/jquery-ui/jquery-ui.min.js"></script>*@
    <script type="text/javascript">

        $("#TipoContribuyenteID").change(function () {
            BuscarTipoDocumento();
        });

        function BuscarTipoDocumento() {
            //Se limpia el contenido del dropdownlist
            $("#TipoDocumentoID").empty();
            $.ajax({
                type: 'POST',
                //Llamado al metodo GetDepartByGeren en el controlador
                url: '../../Empresas/BuscarTipoDocumento',
                dataType: 'json',
                //Parametros que se envian al metodo del controlador
                data: { id: $("#TipoContribuyenteID").val() },
                //En caso de resultado exitoso
                success: function (TipoDocumentos) {
                    if (TipoDocumentos.length == 0) {
                        $("#TipoDocumentoID").append('<option value="0">[No hay Tipo de documentos registrados]</option>');
                    }
                    else {
                        $.each(TipoDocumentos, function (i, TipoDocumento) {
                            $("#TipoDocumentoID").append('<option value="' + TipoDocumento.Value + '">' +
                                TipoDocumento.Text + '</option>');
                        });
                        DefinirMascara();
                    }
                },
                ////Mensaje de error en caso de fallo
                error: function (ex) {
                    alert('Fallo la busqueda de Tipo de documentos.' + ex);
                }
            });
            return false;
        };

        window.onload = DefinirMascara();

        function DefinirMascara() {
            var tipoDocumentoID = $("#TipoDocumentoID").val();
            if (tipoDocumentoID == 96) {
                // Definimos las mascaras para cada input
                $("#NroTipoDocumento").mask("99999999");
            }
            else {
                // Definimos las mascaras para cada input
                $("#NroTipoDocumento").mask("99-99999999-9");
            }
            $("#FechaInicio").mask("99/99/9999");
        }

        $("#LocalidadNombre").autocomplete({
            dataType: 'JSON',
            source: function (request, response) {
                jQuery.ajax({
                    url: '/Localidades/BuscarLocalidad',
                    type: "post",
                    dataType: "json",
                    data: {
                        nombre: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                id: item.LocalidadID,
                                value: item.NombreVista
                            }
                        }))
                    }
                })
            },
            select: function (e, ui) {
                $("#LocalidadID").val(ui.item.id);
            }
        });    

    </script>
}