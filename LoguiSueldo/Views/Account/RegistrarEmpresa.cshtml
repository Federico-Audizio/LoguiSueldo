@model LoguiSueldo.Models.Empresa

@{
    ViewBag.Title = "Nueva Empresa";
    Layout = "~/Views/Shared/_LayoutMenuSimple.cshtml";
}

<div>
    <section class="content-header">
        <h1 class="text-center" style="margin-top:10px">
            CREACIÓN DE EMPRESA
        </h1>
        <div class="stepwizard" style="margin-top:20px;">
            <div class="stepwizard-row setup-panel">
                <div class="stepwizard-step">
                    <div class="btn btn-default btn-circle" disabled="disabled">1</div>
                    <p class="text-bold">Registrar Cuenta</p>
                </div>
                <div class="stepwizard-step">
                    <div class="btn btn-default btn-circle" disabled="disabled">2</div>
                    <p class="text-bold">Registrar Datos Personales</p>
                </div>
                <div class="stepwizard-step">
                    <div class="btn-circle">3</div>
                    <p class="text-bold">Registrar Empresa</p>
                </div>
            </div>
        </div>
    </section>

    <section class="content">

        @using (Html.BeginForm("RegistrarEmpresa", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div>
                <div class="panel panel-default">
                    <div class="panel-heading" style="padding:1px 15px">
                        <h4>Datos de la Empresa</h4>
                    </div>
                    <div class="panel-body">
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                <div class="col-md-4 col-sm-4 col-xs-12">
                                    @Html.LabelFor(model => model.RazonSocial, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", autofocus = "true", @style = "text-transform:uppercase;" } })
                                    @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4 col-sm-4 col-xs-12">
                                    @Html.LabelFor(model => model.NombreFantasia, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.NombreFantasia, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.NombreFantasia, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-4 col-sm-4 col-xs-12">
                                    @Html.LabelFor(model => model.DireccionReal, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.DireccionReal, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @style = "text-transform:uppercase;" } })
                                    @Html.ValidationMessageFor(model => model.DireccionReal, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group espaciadoEnForm">
                                <div class="col-md-4 col-sm-4 col-xs-12">
                                    @Html.LabelFor(model => model.LocalidadID, "Localidad", htmlAttributes: new { @class = "control-label" })
                                    <input type="hidden" id="LocalidadID" name="LocalidadID" value="@ViewBag.LocalidadID" />
                                    <input type="text" id="LocalidadNombre" class="form-control" value="@ViewBag.LocalidadNombre" disabled placeholder="Ingrese el nombre de la localidad" onclick="this.select()" style="text-transform:uppercase;" />
                                    <p class="aclaracion-input">*Luego de registrar la empresa, podrá asignarle la localidad.</p>
                                </div>
                                <div class="col-md-4 col-sm-4 col-xs-12">
                                    @Html.LabelFor(model => model.Telefono1, "Telefono", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Telefono1, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", type = "tel" } })
                                    @Html.ValidationMessageFor(model => model.Telefono1, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4 col-sm-4 col-xs-12" id="ancla">
                                    @Html.LabelFor(model => model.CorreoElectronico, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.CorreoElectronico, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @style = "text-transform:lowercase;" } })
                                    @Html.ValidationMessageFor(model => model.CorreoElectronico, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group espaciadoEnForm">
                                <div class="col-md-4 col-sm-4 col-xs-12">
                                    @Html.LabelFor(model => model.TipoContribuyenteID, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownList("TipoContribuyenteID", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TipoContribuyenteID, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4 col-sm-4 col-xs-12">
                                    @Html.LabelFor(model => model.TipoDocumentoID, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownList("TipoDocumentoID", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TipoDocumentoID, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4 col-sm-4 col-xs-12">
                                    @Html.LabelFor(model => model.NroTipoDocumento, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.NroTipoDocumento, new { htmlAttributes = new { @class = "form-control", @id = "NroTipoDocumento", autocomplete = "off", type = "tel" } })
                                    @Html.ValidationMessageFor(model => model.NroTipoDocumento, "", new { @class = "text-danger" })
                                    <p class="aclaracion-input">*Sólo números (Sin guiones).</p>
                                </div>
                            </div>


                            @if (ViewBag.CantEmpresasCreadas > 0)
                            {
                                <a id="atras" class="btnPosicion1" href="~/Manage/Index" title="Volver">
                                    <i class="fa fa-arrow-left"></i>
                                </a>

                                <button type="submit" title="Guardar" id="btn-submit" href="~/Home/Index" class="btnPosicion2"> <i class="glyphicon glyphicon-ok"></i> </button>
                            }
                            else
                            {
                                <button type="submit" title="Guardar" id="btn-submit" href="~/Home/Index" class="btnPosicion1"> <i class="glyphicon glyphicon-ok"></i> </button>
                                <div title="Espere..." id="btn-espere1" class="btnPosicion1 ocultar"> <i style="padding-top:3px" class="glyphicon glyphicon-hourglass"></i> </div>
                            }

                        </div>
                    </div>
                </div>
            </div>

        }
    </section>
</div>


@section Scripts{
    <script src="~/Scripts/jquery-ui/jquery-ui.min.js"></script>
    <script src="~/Scripts/Mascaras/jquery-1.8.3.min.js"></script>
    <script src="~/Scripts/Mascaras/jquery.maskedinput.min.js"></script>
    <script type="text/javascript">

        
        $("#TipoContribuyenteID").change(function () {
            BuscarTipoDocumento();
        });

        function BuscarTipoDocumento() {
            //Se limpia el contenido del dropdownlist
            $("#TipoDocumentoID").empty();
            $.ajax({
                type: 'POST',
                //Llamado al metodo GetDepartByGeren en el controlador
                url: '../../Empresas/BuscarTipoDocumento',
                dataType: 'json',
                //Parametros que se envian al metodo del controlador
                data: { id: $("#TipoContribuyenteID").val() },
                //En caso de resultado exitoso
                success: function (TipoDocumentos) {
                    if (TipoDocumentos.length == 0) {
                        $("#TipoDocumentoID").append('<option value="0">[No hay Tipo de documentos registrados]</option>');
                    }
                    else {
                        $.each(TipoDocumentos, function (i, TipoDocumento) {
                            $("#TipoDocumentoID").append('<option value="' + TipoDocumento.Value + '">' +
                                TipoDocumento.Text + '</option>');
                        });
                        DefinirMascara();
                    }
                },
                ////Mensaje de error en caso de fallo
                error: function (ex) {
                    swal({
                        title: "ATENCIÓN",
                        icon: "error",
                        text: "Fallo la busqueda de Tipo de documentos." + ex,

                        dangerMode: true,
                        closeOnClickOutside: false,
                        closeOnEsc: false,

                        buttons: {
                            confirm: {
                                text: "Aceptar",
                                value: true,
                                visible: true,
                                className: "",
                                closeModal: true
                            }
                        },
                    });
                    //alert('Fallo la busqueda de Tipo de documentos.' + ex);
                }
            });
            return false;
        };

        window.onload = DefinirMascara();

        function DefinirMascara() {
            var tipoDocumentoID = $("#TipoDocumentoID").val();
            if (tipoDocumentoID == 96) {
                // Definimos las mascaras para cada input
                $("#NroTipoDocumento").mask("99999999");
            }
            else {
                // Definimos las mascaras para cada input
                $("#NroTipoDocumento").mask("99-99999999-9");
            }
        }

    </script>
}