@model IEnumerable<LoguiContable.Models.Persona>

@{
    ViewBag.Title = "Personas";
}

<div id="vista-usuario" class="ocultar">
    <section class="content-header">
        <h1>
            PERSONAS
            <small>Listado de Personas</small>
        </h1>
    </section>
    <section class="content">

        @* VENTANA FLOTANTE NUEVO CHEQUE PROPIO *@
        @Html.Partial("_VentanaNuevaPersona")

        @* IMPRESION *@
        <input type="hidden" id="FechaActual" value="@DateTime.Now.AddHours(-3).ToString("dd/MM/yyyy")" />
        <input type="hidden" id="EmpresaRazon" value="@ViewBag.Empresa.NombreCompleto" />
        <input type="hidden" id="DireccionReal" value="@ViewBag.Empresa.DireccionReal" />
        <input type="hidden" id="Telefono1" value="@ViewBag.Empresa.Telefono" />
        @* IMPRESION *@

        <a class="btnPosicion2" id="AbrirModalImpresion" style="cursor:pointer" title="Imprimir Listado">
            <i class="glyphicon glyphicon-print"></i>
        </a>

        <button id="btn-nueva-persona" class="btnPosicion1 no-imprimir" data-toggle='modal' data-target='.ModalCrearPersona' title="Nueva Persona">
            <i class="fa fa-plus"></i>
        </button>

        @if (ViewBag.ErrorPermisos == "1")
        {
            <div class="alert alert-danger text-center" style="font-size:16px;">
                <strong class="mensajeDanger">¡No puede realizar esta acción!</strong>
                <hr style="border-color:transparent; margin-top:-15px" />
                <p class="mensajeDanger">Debe tener Permisos de SuperUsuario para Modificar o Ver los datos de la Empresa.</p>
            </div>
        }
        <div id="Div-Deshabilitado" class="alert alert-success text-center custom-alert ocultar" style="font-size:16px;">
            <button type="button" class="close" onclick="QuitarMensaje()"><span>&times;</span></button>

            <strong class="mensajeSuccess">¡Deshabilitado Correctamente!</strong>
        </div>
        <div id="Div-Habilitado" class="alert alert-success text-center custom-alert ocultar" style="font-size:16px;">
            <button type="button" class="close" onclick="QuitarMensaje()"><span>&times;</span></button>

            <strong class="mensajeSuccess">¡Habilitado Correctamente!</strong>
        </div>
        <div id="ErrorEliminar" class="alert alert-danger text-center ocultar" style="font-size:16px;">
            <div class="text-right" style="margin-top:-5px ;margin-bottom:-15px; cursor:pointer">
                <a onclick="QuitarMensaje()"><i class="glyphicon glyphicon-remove text-red"></i></a>
            </div>
            <strong class="mensajeDanger">¡No puede realizar esta acción!</strong>
            <hr style="border-color:transparent; margin-top:-15px" />
            <p class="mensajeDanger" id="Error-eliminar"></p>
        </div>

        <link href="~/Content/TablaPersona-1.0.1.css" rel="stylesheet" />

        <div class="box margenInfIndex">

            <input type="hidden" id="PersonasActivas" value="1" />

            <div class="panel panel-default" style="margin-bottom:-2px">
                <div class="no-imprimir cabeceraTablas">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div style="margin-left:10px;margin-right:10px">
                                <div class="col-lg-6 col-md-4 col-sm-12">
                                    @Html.Label("Buscar", htmlAttributes: new { @class = "control-label" })
                                    <input type="hidden" name="PersonaID" id="CabeceraPersonaID" value="0" />
                                    <input type="text" class="form-control" onKeyUp="FiltrarPersona()" onKeyDown="FiltrarPersona()" id="PersonaNombre" onClick="this.select()" autocomplete="off" placeholder="Razón Social / Cuit / Dni" style="text-transform:uppercase">
                                </div>
                                <div class="col-lg-3 col-md-4 col-sm-6">
                                    @Html.Label(" ", htmlAttributes: new { @class = "control-label" })
                                    <p id="P-Personas-Activas" style="margin-top:7px;font-size:13px"><a class="btn-ovalo" id="Personas-Activas">Personas Activas</a></p>
                                    <p id="P-Personas-Inactivas" style="margin-top:7px;font-size:13px"><a class="btn-ovalo" id="Personas-Inactivas">Personas Inactivas</a></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <table id="tabla" class="table-condensed paddingEncabezadosTablas">
                <thead>
                    <tr>
                        <th scope="col" style="width:25%">Nombre / Razón Social</th>
                        <th scope="col">Dirección</th>
                        <th scope="col">Localidad</th>
                        <th scope="col" class="text-right">CUIT/DNI</th>
                        <th scope="col" class="text-center">Teléfono</th>
                        <th style="width:50px" scope="col"></th>
                    </tr>
                </thead>
                <tbody id="personas"></tbody>
            </table>
            <div class='contenedor-spinner spinner-tabla ocultar' id="SpinnerCargandoPersonas">
                <div class='spinner-rueda' style='width: 1.5em; height: 1.5em; color:#605ca8;'></div>&nbsp;&nbsp;&nbsp;Cargando...
            </div>

        </div>

        <input type="hidden" id="PermisoUsuario" value="@ViewBag.PermisoUsuario" />
    </section>
</div>


@* VENTANA EMERGENTE PARA LA IMPRESION *@
<div id="ModalImprimir" class="modal fade ModalImprimir" tabindex="-1" role="dialog" aria-labelledby="myExtraLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md modal-dialog-centered no-imprimir">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Opciones de Archivo</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <div class="col-lg-6 col-sm-6 text-center no-imprimir">
                    <div style="margin-top: 1rem; margin-bottom: 1rem;">
                        <a class="btn-ovalo" style="cursor:pointer" onclick="ExportarAPDF();">Formato PDF</a>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-6 text-center no-imprimir">
                    <div style="margin-top: 1rem; margin-bottom: 1rem;">
                        <a class="btn-ovalo" style="cursor:pointer" onclick="ExportarAExcel();">Formato Excel</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="ocultar">
    <table id="tabla-imprimir">
        <thead>
            <tr>
                <th>Nombre / Razón Social</th>
                <th>Dirección</th>
                <th>Localidad</th>
                <th>CUIT/DNI</th>
                <th>Teléfono</th>
            </tr>
        </thead>
        <tbody id="personas-imprimir"></tbody>
    </table>
</div>

@section Scripts{
    <script src="~/Scripts/Mascaras/jquery.maskedinput.min.js"></script>
    <script src="~/Scripts/Persona/NuevaPersona-1.0.2.js"></script>
    <script src="~/Scripts/MantenerFiltros.js"></script>
    <script language="javascript">
        function PulsarTecla(event) {
            tecla = event.keyCode;

            if (tecla == 107 && event.altKey) {
                document.getElementById("agregar-persona").click();
            }
        }

        window.onkeydown = PulsarTecla;
    </script>

    <script>
        window.onload = CargarVista();

        function CargarVista() {
            MostrarCarga();
            //BuscarPersonas();

            var filtros = [
                { name: 'persona_id', element: document.querySelector('#CabeceraPersonaID') },
                { name: 'persona_nombre', element: document.querySelector('#PersonaNombre') }
            ];
            var filtrar = document.referrer ? document.referrer.includes('/Personas/Edit/') : false;

            MantenerFiltros.iniciar(filtros, filtrar, BuscarPersonas);
        }


        $('#Personas-Activas').click(function () {
            $("#PersonasActivas").val(0);
            MostrarCarga();
            BuscarPersonas();
            return false;
        });

        $('#Personas-Inactivas').click(function () {
            $("#PersonasActivas").val(1);
            MostrarCarga();
            BuscarPersonas();
            return false;
        });

        var moneda = new Intl.NumberFormat('en-US', {
            currency: 'USD',
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });

        function FiltrarPerson() {
            setTimeout("FiltrarPersona();", 500);
        }

        function FiltrarPersona() {
            var nombre = $("#PersonaNombre").val();
            var personaID = $("#CabeceraPersonaID").val();
            if (nombre == "" && personaID != 0) {
                $("#CabeceraPersonaID").val(0);
                BuscarPersonas();
            }
        }

        //Buscamos la persona para filtrar en la tabla
        $("#PersonaNombre").autocomplete({
            dataType: 'JSON',
            source: function (request, response) {
                jQuery.ajax({
                    url: '/Personas/BuscarPersona',
                    type: "post",
                    dataType: "json",
                    data: {
                        nombre: request.term, PersonaID: 0
                    },
                    success: function (data) {

                        if (data.length === 0) {
                            $("#CabeceraPersonaID").val(0);
                        }

                        response($.map(data, function (item) {
                            return {
                                id: item.PersonaID,
                                value: item.NombreCompleto
                            }
                        }))
                    }
                })
            },
            select: function (e, ui) {
                $("#CabeceraPersonaID").val(ui.item.id);
                BuscarPersonas();
            }
        });

        $('#CantidadRegistrosID').change(function () {
            MostrarCarga();
            BuscarPersonas();
        });


        function BuscarPersonas(cargaProgresiva = false) {

            /*var tipoPersonaID = $("#TipoPersonaID").val();*/
            var personasActivas = $("#PersonasActivas").val();
            //var cantidadRegistrosID = $("#CantidadRegistrosID").val();
            var cantidadRegistrosID = 100;
            var personaID = $("#CabeceraPersonaID").val();
            var cantidadElementosIgnorar = 0;

            if (!cargaProgresiva) {
                $("#personas").empty();
            } else {
                cantidadElementosIgnorar = document.querySelector('#personas').childElementCount;
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("BuscarTipoPersonas")',
                data: {
                    //TipoPersonaID: tipoPersonaID,
                    PersonaID: personaID,
                    PersonasActivas: personasActivas,
                    CantidadRegistrosID: cantidadRegistrosID,
                    CantidadElementosIgnorar: cantidadElementosIgnorar

                },
                success: function (personas) {
                    if (!cargaProgresiva) {
                        $("#personas").empty();
                    }

                    var personasActivas = personas.filter(p => p.Desvinculado == false);
                    var personasDesactivadas = personas.filter(p => p.Desvinculado == true);

                    console.log("Activas: ", personasActivas, "Desactivadas: ", personasDesactivadas);

                    personasActivas.forEach(p => {

                        $("#personas").append(`

                            <tr data-persona-id="${p.PersonaID}">
                                <td data-label="Nombre / Razón Social">
                                    <a title="Detalle" class="text-bold" href="../Personas/Edit/${p.PersonaID}">${p.NombreCompleto}</a>
                                </td>
                                <td data-label="Dirección">
                                    ${p.DireccionReal}
                                </td>
                                <td data-label="Localidad">
                                    ${p.LocalidadNombre}
                                </td>
                                <td data-label="CUIT/DNI" class="text-right">
                                    ${p.NroTipoDocumento}
                                </td>
                                <td data-label="Teléfono" class="centrar-telefono bold">
                                    <a href="tel: ${p.Telefono}">${p.Telefono}</a>
                                </td>

                                <td data-label="Opciones:" class="achicar altoBotonesTabla">
                                    <a class="btn-tabla" onclick="DeshabilitarPersona(${p.PersonaID})" title="Deshabilitar">
                                        <i class="fa fa-ban"></i>
                                    </a>

                                </td>

                            </tr>

                        `);

                    });


                    personasDesactivadas.forEach(p => {

                        $("#personas").append(`

                            <tr data-persona-id="${p.PersonaID}">
                                <td data-label="Nombre / Razón Social" class="text-bold fondoRojoTabla">
                                    ${p.NombreCompleto}
                                </td>
                                <td data-label="Dirección" class="fondoRojoTabla">
                                    ${p.DireccionReal}
                                </td>
                                <td data-label="Localidad" class="fondoRojoTabla">
                                    ${p.LocalidadNombre}
                                </td>
                                <td data-label="CUIT/DNI" class="text-right fondoRojoTabla" id="TipoDocumentoID">
                                    ${p.NroTipoDocumento}
                                </td>
                                <td data-label="Teléfono" class="centrar-telefono bold fondoRojoTabla">
                                    ${p.Telefono}
                                </td>
                                <td data-label="Saldo Cliente" class="text-right fondoRojoTabla text-bold"> - </td>
                                <td data-label="Saldo Proveedor" class="text-right fondoRojoTabla text-bold"> - </td>
                                <td data-label="Opciones:" class="achicar altoBotonesTabla fondoRojoTabla">
                                    <a class="btn-tabla" onclick="HabilitarPersona(${p.PersonaID})" title="Habilitar">
                                        <i class="glyphicon glyphicon-ok"></i>
                                    </a>
                                    <a style="margin-left:5px" class="btn-tabla" title="Habilite para visualizar Cuenta Corriente">
                                        <i class="fa fa-list" style="color:#ccc"></i>
                                    </a>
                                </td>

                            </tr>

                        `);

                    });

                    if (personasActivas.length != 0) {
                        $('#P-Personas-Activas').removeClass('ocultar');
                        $('#P-Personas-Inactivas').addClass('ocultar');
                    } else {
                        $('#P-Personas-Activas').addClass('ocultar');
                        $('#P-Personas-Inactivas').removeClass('ocultar');
                    }

                    //AGREGAMOS O QUITAMOS LA FUNSIÓN DEL EVENTO SCROLL DEPENDIENDO DE LA CANTIDAD DE REGISTROS QUE SE MUESTRAN
                    if (personas.length >= cantidadRegistrosID) {
                        //EVENTO SCROLL QUE PERMITE CARGAR PRODUCTOS PROGRESIVAMENTE
                        document.addEventListener('scroll', BuscarMasPersonas); //CARGA PROGRESIVA
                    } else {
                        document.removeEventListener('scroll', BuscarMasPersonas, {capture: false});
                    }


                    if (cargaProgresiva) {
                        $('#SpinnerCargandoPersonas').addClass('ocultar');
                        if (personas.length > 0) {
                            document.addEventListener('scroll', BuscarMasPersonas);
                        }
                    }

                    detectarCarga();
                },
                error: function (err) {
                    console.log(err);
                    swal({
                        title: "ATENCIÓN",
                        icon: "error",
                        text: "Error al cargar la vista de Personas.",

                        dangerMode: true,
                        closeOnClickOutside: false,
                        closeOnEsc: false,

                        buttons: {
                            confirm: {
                                text: "Aceptar",
                                value: true,
                                visible: true,
                                className: "botonVerdeSweetAlert",
                                closeModal: true
                            }
                        },
                    }).then(res => location.assign('/Home/Index'));
                }
            });
        }

        function BuscarMasPersonas() {
            var posicionElementofinal = document.querySelector('#personas').lastElementChild.getBoundingClientRect().top;
            console.log(posicionElementofinal);
            if (posicionElementofinal <= 700) {
                //console.log('Entro');
                $('#SpinnerCargandoPersonas').removeClass('ocultar');
                document.removeEventListener('scroll', BuscarMasPersonas, {capture: false});
                BuscarPersonas(true);
            }
        }


        function QuitarMensaje() {
            $('#ErrorEliminar').addClass('ocultar');
            $('#Div-Deshabilitado').addClass('ocultar');
            $('#Div-Habilitado').addClass('ocultar');
        }

        function DeshabilitarPersona(PersonaID) {
            swal({
                title: "ATENCIÓN",
                text: "¿Está SEGURO de deshabilitar esta Persona?",
                icon: "warning",

                dangerMode: true,
                closeOnClickOutside: false,
                closeOnEsc: false,

                buttons: {
                    cancel: {
                        text: "Cancelar",
                        value: null,
                        visible: true,
                        className: "botonRojoSweetAlert",
                        closeModal: true,
                    },
                    confirm: {
                        text: "Aceptar",
                        value: true,
                        visible: true,
                        className: "botonVerdeSweetAlert",
                        closeModal: true
                    }
                },
            })
            .then((willDelete) => {
                if (willDelete) {
                    //MostrarCarga();
                    EstadoPersona(PersonaID, true);
                }
                else {
                    //SI PRESIONA CANCELAR
                    return false;
                }
            });

        };

        function HabilitarPersona(PersonaID) {
            swal({
                title: "ATENCIÓN",
                text: "¿Está SEGURO de habilitar esta Persona?",
                icon: "warning",

                dangerMode: true,
                closeOnClickOutside: false,
                closeOnEsc: false,

                buttons: {
                    cancel: {
                        text: "Cancelar",
                        value: null,
                        visible: true,
                        className: "botonRojoSweetAlert",
                        closeModal: true,
                    },
                    confirm: {
                        text: "Aceptar",
                        value: true,
                        visible: true,
                        className: "botonVerdeSweetAlert",
                        closeModal: true
                    }
                },
            })
            .then((willDelete) => {
                if (willDelete) {
                    //MostrarCarga();
                    EstadoPersona(PersonaID, false);
                }
                else {
                    //SI PRESIONA CANCELAR
                    return false;
                }
            });

        };

        function EstadoPersona(PersonaID, Eliminado) {
            $("#Error-eliminar").empty();
            $.ajax({
                type: "POST",
                url: '@Url.Action("EstadoPersona")',
                data: { id: PersonaID, Eliminado: Eliminado},
                success: function (data) {
                    if (data != null) {
                        //BuscarPersonas();
                        if (data == "Deshabilitado" || data == "Habilitado") {
                            if (data == "Deshabilitado") {
                                $('#Div-Deshabilitado').removeClass('ocultar');
                                $('#Div-Habilitado').addClass('ocultar');
                            }
                            if (data == "Habilitado") {
                                $('#Div-Deshabilitado').addClass('ocultar');
                                $('#Div-Habilitado').removeClass('ocultar');
                            }

                            $('#ErrorEliminar').addClass('ocultar');

                            var filaEliminar = document.querySelector(`[data-persona-id="${PersonaID}"]`);
                            filaEliminar.classList.add('fade');
                            setTimeout(function () { filaEliminar.parentElement.removeChild(filaEliminar); }, 500);

                            return;
                        }

                        $('#ErrorEliminar').removeClass('ocultar');
                        $('#Div-Deshabilitado').addClass('ocultar');
                        $('#Div-Habilitado').addClass('ocultar');

                        $("#Error-eliminar").append(data);
                    }
                },
                error: function (err) {
                    console.error('Ocurrio un error: ', err);
                    swal({
                        title: "ATENCIÓN",
                        icon: "error",
                        text: "No se pudo eliminar.",

                        dangerMode: true,
                        closeOnClickOutside: false,
                        closeOnEsc: false,

                        buttons: {
                            confirm: {
                                text: "Aceptar",
                                value: true,
                                visible: true,
                                className: "botonVerdeSweetAlert",
                                closeModal: true
                            }
                        },
                    }).then(res => {
                        if (res) {
                            location.reload();
                        }
                    });
                }
            });
        }


        //ABRIR EL MODAL CON LAS OPCIONES DE IMPRESIÓN
        $('#AbrirModalImpresion').on('click', function () {
            $('#ModalImprimir').modal('show');
        });

        function ExportarAExcel() {
            $('#ModalImprimir').modal('hide');
            let tipoPersonaID = $("#TipoPersonaID").val();
            location.href = `/Personas/ExportarListadoPersonas`;
        }

         function ExportarAPDF() {
            $('#ModalImprimir').modal('hide');
            $("#personas-imprimir").empty();
            $.ajax({
                type: "POST",
                url: '@Url.Action("BuscarTipoPersonas")',
                data: {
                    PersonaID: 0,
                    PersonasActivas: 1,
                    CantidadRegistrosID: 0,
                    CantidadElementosIgnorar: 0
                },
                success: function (personas) {
                    $("#personas-imprimir").empty();

                        var personasActivas = personas.filter(p => p.Desvinculado == false);

                        personasActivas.forEach(p => {

                            $("#personas-imprimir").append(`
                                <tr>
                                    <td>${p.NombreCompleto}</td>
                                    <td>${p.DireccionReal}</td>
                                    <td>${p.LocalidadNombre}</td>
                                    <td>${p.NroTipoDocumento}</td>
                                    <td>${p.Telefono}</td>
                                </tr>
                            `);
                        });

                    var doc = new jsPDF();
                    var fechaActual = $("#FechaActual").val();
                    var empresaRazon = $("#EmpresaRazon").val();

                    var totalPagesExp = "{total_pages_count_string}";
                    var pageContent = function (data) {
                    //HEADER
                    doc.setLineWidth(10);

                    doc.setDrawColor(128, 128, 128);
                    doc.line(14, 12, 196.5, 12);

                    doc.setTextColor(255, 255, 255);
                     doc.setFontStyle('bold');
                    doc.setFontSize(15);
                    doc.text(17, 14, "Listado de Personas Activas");

                    doc.setFontSize(11);
                    doc.text(156, 13.5, "Impreso: " + fechaActual);
                    //FIN HEADER

                    doc.setTextColor(40);

                    doc.setFontSize(16);

                    doc.setFontStyle('bold');

                    var pageHeight = doc.internal.pageSize.height || doc.internal.pageSize.getHeight();
                    var pageWidth = doc.internal.pageSize.width || doc.internal.pageSize.getWidth();

                    //FOOTER
                    var str = "Pagina " + data.pageCount;
                    // Total page number plugin only available in jspdf v1.0+
                    if (typeof doc.putTotalPages == 'function') {
                        str = str + " de " + totalPagesExp;
                    }
                    var pageHeight = doc.internal.pageSize.height || doc.internal.pageSize.getHeight();

                    doc.setLineWidth(8);
                    doc.setDrawColor(238, 238, 238);
                    doc.line(14, pageHeight - 11, 196.5, pageHeight - 11);

                    doc.setFontSize(10);
                    doc.text(empresaRazon, 17, pageHeight - 10);

                    doc.text(str, 165, pageHeight - 10);
                    //FIN FOOTER
                };

             var elem = document.getElementById("tabla-imprimir");
             var res = doc.autoTableHtmlToJson(elem);

                doc.autoTable(res.columns, res.data, {
                     startY: 17, addPageContent: pageContent,
                     margin: { top: 17 },
                     styles: {
                     fillStyle: 'DF',
                     overflow: 'linebreak',
                     columnWidth: 110,
                     lineWidth: 0.1,
                     lineColor: [219, 219, 219]
                    },
                    headerStyles: {
                        fillColor: [255, 255, 255],
                        //textColor: [0, 0, 0],
                        //halign: 'center'
                    },
                    columnStyles: {
                        0: { columnWidth: 60 },
                        1: { columnWidth: 40 },
                        2: { columnWidth: 32 },
                        3: { columnWidth: 25 },
                        4: { columnWidth: 25 }
                    },
                    createdHeaderCell: function (cell, opts) {
                        if (opts.column.index == 3 || opts.column.index == 4) {
                            cell.styles.halign = 'center';
                        }
                        cell.styles.fontSize = 8;
                    },
                    createdCell: function (cell, opts) {
                        cell.styles.fontSize = 7;
                        if (opts.column.index == 3 || opts.column.index == 4) {
                            cell.styles.halign = 'center';
                        }
                    }
                });

                // ESTO SE LLAMA ANTES DE ABRIR EL PDF PARA QUE MUESTRE EN EL PDF EL NRO TOTAL DE PAGINAS. ACA CALCULA EL TOTAL DE PAGINAS.
                if (typeof doc.putTotalPages === 'function') {
                    doc.putTotalPages(totalPagesExp);
                }

                ////////////////////////////////////////////////////////////////////////////APERTURA O GUARDADO DEL PDF.
                doc.save('Personas ' + empresaRazon +'.pdf'); //Para descargar directamente.
                },
                error: function (err) {
                console.log(err);
                swal({
                    title: "ATENCIÓN",
                    icon: "error",
                    text: "Error al generar pdf de Personas.",

                    dangerMode: true,
                    closeOnClickOutside: false,
                    closeOnEsc: false,

                    buttons: {
                        confirm: {
                            text: "Aceptar",
                            value: true,
                            visible: true,
                            className: "botonVerdeSweetAlert",
                            closeModal: true
                        }
                    },
                }).then(res => location.assign('/Personas/Index'));
            }
        });
    }
    </script>
}