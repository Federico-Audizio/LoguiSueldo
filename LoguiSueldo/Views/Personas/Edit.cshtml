@model LoguiContable.Models.Persona

@{
    ViewBag.Title = "Editar Persona";
}
<div id="vista-usuario" class="ocultar">
    <section class="content-header">
        <h1>
            PERSONAS
            <small>Edición de Persona</small>
        </h1>
    </section>
    <section class="content">
        <a id="atras" class="btnPosicion1" href="~/Personas/Index" title="Volver">
            <i class="fa fa-arrow-left"></i>
        </a>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="nav-tabs-custom" style="box-shadow:none">

                <ul class="nav nav-tabs">
                    <li class="active"><a href="#general_1" data-toggle="tab" aria-expanded="true">Datos Personales</a></li>
                </ul>

                <div class="tab-content" style="background-color: #ecf0f5;">

                    <div class="tab-pane active" id="general_1">

                        <div style="margin-left:-10px;margin-right:-10px">
                            <div class="box">
                                <div class="form-horizontal">
                                    <div class="panel panel-default">
                                        <div class="panel-heading" style="font-size:16px; font-weight:bold; height:32px">
                                            <div style="margin:-5px 0 0 -3px">Datos Generales</div>
                                        </div>
                                        <div class="panel-body">
                                            <div style="margin-top:10px">

                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                @Html.HiddenFor(model => model.PersonaID, new { id = "HiddenPersonaID" })

                                                <input type="hidden" id="MostrarCredencialesGoogle" value="@ViewBag.MostrarCredenciales" />

                                                <input type="hidden" id="PermisoUsuarioLogueado" value="@ViewBag.PermisoUsuario" />

                                                <input type="hidden" id="ProductosProveedor" value="@ViewBag.ProductosProveedor" />
                                                <input type="hidden" id="CrearPersonaSoloContado" checked="@ViewBag.CrearPersonaSoloContado" />

                                                <div class="form-group espaciadoEnForm">
                                                    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                                        @Html.LabelFor(model => model.NombreCompleto, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.NombreCompleto, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", autofocus = "true", @style = "text-transform:uppercase;" } })
                                                        @Html.ValidationMessageFor(model => model.NombreCompleto, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                                        @Html.LabelFor(model => model.NombreFantasia, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.NombreFantasia, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.NombreFantasia, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-lg-4 col-md-6 col-sm-12 col-xs-12">
                                                        @Html.LabelFor(model => model.LocalidadID, "Localidad", htmlAttributes: new { @class = "control-label" })
                                                        <input type="hidden" id="LocalidadID" name="LocalidadID" value="@ViewBag.LocalidadID" />
                                                        <input type="text" id="LocalidadNombre" class="form-control" autocomplete="off" value="@ViewBag.LocalidadNombre" placeholder="Ingrese el nombre de la localidad" onclick="this.select()" style="text-transform:uppercase;" />
                                                    </div>
                                                    <div class="col-lg-4 col-md-6 col-sm-6 col-xs-6">
                                                        @Html.LabelFor(model => model.DireccionReal, "Dirección", htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.DireccionReal, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @style = "text-transform:uppercase;" } })
                                                        @Html.ValidationMessageFor(model => model.DireccionReal, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-lg-4 col-md-6 col-sm-6 col-xs-6">
                                                        @Html.LabelFor(model => model.Telefono1, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.Telefono1, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", type = "tel" } })
                                                        @Html.ValidationMessageFor(model => model.Telefono1, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-lg-3 col-md-6 col-sm-6 col-xs-12">
                                                        @Html.LabelFor(model => model.CorreoElectronico, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.CorreoElectronico, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @style = "text-transform:lowercase;" } })
                                                        @Html.ValidationMessageFor(model => model.CorreoElectronico, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
                                                        @Html.LabelFor(model => model.TipoContribuyenteID, "Tipo Contribuyente", htmlAttributes: new { @class = "control-label" })
                                                        @Html.DropDownList("TipoContribuyenteID", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.TipoContribuyenteID, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-lg-3 col-md-4 col-sm-6 col-xs-6">
                                                        @Html.LabelFor(model => model.TipoDocumentoID, htmlAttributes: new { @class = "control-label" })
                                                        @Html.DropDownList("TipoDocumentoID", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.TipoDocumentoID, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-lg-3 col-md-4 col-sm-6 col-xs-6">
                                                        @Html.LabelFor(model => model.NroTipoDocumento, "Nº de Documento", htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.NroTipoDocumento, new { htmlAttributes = new { @class = "form-control", @id = "NroTipoDocumento", autocomplete = "off", type = "tel" } })
                                                        @Html.ValidationMessageFor(model => model.NroTipoDocumento, "", new { @class = "text-danger" })
                                                        <p class="aclaracion-input">*Sólo números.</p>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


               
                </div>
            </div>
            <button type="submit" title="Guardar" id="btn-submit" onclick="OcultarSubmit();" class="btnPosicion2"> <i class="glyphicon glyphicon-ok"></i> </button>
        }

        <div style="margin-top:-30px">
            <div class="box margenInfIndex">
                <div class="form-horizontal">
                    <div class="panel panel-default">
                        <div class="panel-heading" style="font-size:16px; font-weight:bold; height:32px">
                            <div style="margin:-5px 0 0 -3px">Usuario del Sistema</div>
                        </div>
                        <div class="panel-body">
                            <input type="hidden" id="AgregarUsuario" value="0" />
                            <div class="tab-pane active" id="tab-usuario">

                                <div id="div-datos-usuarios" style="margin-top:10px; min-height:50px; height:100%">

                                    <div id="div-btn-agregarusuario" class="text-center" style="margin-top:30px;">
                                        <a id="agregar-usuario" class="btn-ovalo">Nuevo Usuario</a>
                                        <a id="agregar-usuario-existente" class="btn-ovalo">Usuario Existente</a>
                                    </div>

                                    <div id="form-agregar-usuario" class="ocultarCarga" style="margin-top:10px;">
                                        <div class="form-group espaciadoEnForm">
                                            <div class="col-md-4" id="Div-Email">
                                                @Html.Label("Correo Electrónico", htmlAttributes: new { @class = "control-label" })
                                                <input type="email" class="form-control" id="email-usuario" placeholder="Email" style="text-transform:lowercase;" />
                                                <p class="ocultarCarga" id="error-email" style="font-size:14px; color: red; margin-bottom:-10px"></p>
                                            </div>

                                            <div class="col-md-4" id="Div-Contraseña">
                                                @Html.Label("Contraseña", htmlAttributes: new { @class = "control-label" }) <span class="requerido">*</span>
                                                <input type="text" class="form-control requerido" id="contraseña-usuario" placeholder="Contraseña" />
                                                <p id="longitud-minima" style="color:#696969; font-size:12px;  margin: 0px;">*Longitud mínima de 6 caracteres.</p>
                                                <p class="ocultarCarga requerido" id="requerido-contraseña" style="margin-top:-4px ;">*Campo Requerido</p>
                                                <p class="ocultarCarga requerido" id="corto-contraseña">*Longitud mínima de 6 caracteres</p>
                                            </div>

                                            <div class="col-md-4" id="Div-PermisoID">
                                                @Html.Label("Permiso", htmlAttributes: new { @class = "control-label" })
                                                @Html.DropDownList("PermisoID", null, htmlAttributes: new { @class = "form-control", id = "PermisoID" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="text-center espacioCol" style="margin-top:10px">
                                                <a id="btn-agregarusuario-cancelar" class="btn-ovalo">Cancelar</a>
                                                <a id="btn-agregarusuario-Eliminar" class="btn-ovalo ocultarCarga">Desvincular</a>
                                                <a id="btn-agregarusuario-Vincular" class="btn-ovalo ocultarCarga">Vincular</a>
                                                <input type="submit" value="Aceptar" id="btn-agregarusuario-guardar" class="btn-ovalo" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id="mensaje-datos-usuarios" class="alert alert-danger ocultarCarga" style="font-size:16px; margin-top:20px; margin-bottom:0px">
                                    <div>
                                        <strong class="text-red">Sus permisos no son aptos para administrar Usuarios del Sistema.</strong>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@section Scripts {
    <script src="~/Scripts/Mascaras/jquery.maskedinput.min.js"></script>
    @*<script src="~/Scripts/Persona/EditarPersona-1.0.2.js"></script>*@

    <script>
        $("#NombreCompleto").select();
    </script>

    <script language="javascript">
        function PulsarTecla(event) {
            tecla = event.keyCode;

            if (tecla == 8 && event.altKey) {
                document.getElementById("atras").click();
            }
        }

        window.onkeydown = PulsarTecla;
    </script>

    <script>
        /* Autocomplete de producto, jquery UI */
        var personaRealID = $('#HiddenPersonaID').val();

        $('#agregar-usuario').click(function () {
            $('#div-btn-agregarusuario').addClass('ocultarCarga');
            $('#form-agregar-usuario').removeClass('ocultarCarga');
            $('#Div-Contraseña').removeClass('ocultarCarga');
            $('#Div-Email').removeClass('col-md-6');
            $('#Div-Email').addClass('col-md-4');
            $('#Div-PermisoID').removeClass('col-md-6');
            $('#Div-PermisoID').addClass('col-md-4');
            $('#AgregarUsuario').val(1);
        });

        $('#agregar-usuario-existente').click(function () {
            $('#div-btn-agregarusuario').addClass('ocultarCarga');
            $('#form-agregar-usuario').removeClass('ocultarCarga');
            $('#Div-Contraseña').addClass('ocultarCarga');
            $('#Div-Email').removeClass('col-md-4');
            $('#Div-Email').addClass('col-md-6');
            $('#Div-PermisoID').removeClass('col-md-4');
            $('#Div-PermisoID').addClass('col-md-6');
            $('#AgregarUsuario').val(2);
        });

        $('#btn-agregarusuario-Eliminar').click(function () {
             swal({
                title: "ATENCIÓN",
                text: "¿Está SEGURO de desvincular el Usuario de esta Persona? Si desvincula este Usuario las Configuraciones relacionadas al mismo se perderán.",
                icon: "warning",

                dangerMode: true,
                closeOnClickOutside: false,
                closeOnEsc: false,

                buttons: {
                    cancel: {
                        text: "Cancelar",
                        value: null,
                        visible: true,
                        className: "",
                        closeModal: true,
                    },
                    confirm: {
                        text: "Aceptar",
                        value: true,
                        visible: true,
                        className: "",
                        closeModal: true
                    }
                },
            })
            .then((willDelete) => {
                if (willDelete) {
                    EstadoPermisoUsuario(true);
                }
                else {
                    //txt = "You pressed Cancel!";
                    return false;
                }
            });

        });

        $('#btn-agregarusuario-Vincular').click(function () {
             swal({
                title: "ATENCIÓN",
                text: "¿Está SEGURO de vincular nuevamente el Usuario de esta Persona?",
                icon: "warning",

                dangerMode: true,
                closeOnClickOutside: false,
                closeOnEsc: false,

                buttons: {
                    cancel: {
                        text: "Cancelar",
                        value: null,
                        visible: true,
                        className: "",
                        closeModal: true,
                    },
                    confirm: {
                        text: "Aceptar",
                        value: true,
                        visible: true,
                        className: "",
                        closeModal: true
                    }
                },
            })
            .then((willDelete) => {
                if (willDelete) {
                    EstadoPermisoUsuario(false);
                }
                else {
                    //txt = "You pressed Cancel!";
                    return false;
                }
            });
        });


         function EstadoPermisoUsuario(Desvinculado) {
                var Email = $('#email-usuario').val();
                $.ajax({
                type: "POST",
                url: '@Url.Action("EstadoPermisoUsuario")',
                data: { Email: Email, PersonaID: personaRealID, Desvinculado: Desvinculado },
                     success: function (resultado) {
                         if (resultado == 5) {
                             $('#error-email').removeClass('ocultarCarga');
                             $('#error-email').append("*Su plan ha llegado al límite de Usuarios.");
                         }
                         else {
                             cargarDatosUsuarios(Email = "", PermisoID = 0, Contraseña = "", 0);
                         }
                     },
                     error: function (result) {
                            swal({
                                title: "ATENCIÓN",
                                icon: "error",
                                text: "No se pudo eliminar el usuario.",

                                dangerMode: true,
                                closeOnClickOutside: false,
                                closeOnEsc: false,

                                buttons: {
                                    confirm: {
                                        text: "Aceptar",
                                        value: true,
                                        visible: true,
                                        className: "",
                                        closeModal: true
                                    }
                                },
                            });
                            //alert("No se pudo eliminar el usuario.");
                     }
                });
        }


        $('#btn-agregarusuario-cancelar').click(function () {
            $('#div-btn-agregarusuario').removeClass('ocultarCarga');

            $("#email-usuario").val('');
            $('#error-email').empty();

            $("#contraseña-usuario").val('');
            $('#requerido-contraseña').addClass('ocultarCarga');

            $('#corto-contraseña').addClass('ocultarCarga');
            $('#longitud-minima').removeClass('ocultarCarga');

            $('#form-agregar-usuario').addClass('ocultarCarga');
        });


        $('#btn-agregarusuario-guardar').click(function () {

            var Email = $('#email-usuario').val();
            var PermisoID = $('#PermisoID').val();
            var Contraseña = $('#contraseña-usuario').val();
            var UsuarioNuevoExistente = $('#AgregarUsuario').val();

            if (UsuarioNuevoExistente == 1 || UsuarioNuevoExistente == 2) {
                if (Email != "") {

                    $('#error-email').empty();
                    $('#error-email').addClass('ocultarCarga');

                    if (UsuarioNuevoExistente == 2) {//USUARIO EXISTENTE
                        cargarDatosUsuarios(Email, PermisoID, Contraseña, UsuarioNuevoExistente);
                    }
                    else {//USUARIO NUEVO
                        if (Contraseña != "") {
                            $('#requerido-contraseña').addClass('ocultarCarga');

                            if (Contraseña.length < 6 && UsuarioNuevoExistente == 1) {
                                $('#corto-contraseña').removeClass('ocultarCarga');
                                $('#longitud-minima').addClass('ocultarCarga');
                            }
                            else {
                                cargarDatosUsuarios(Email, PermisoID, Contraseña, UsuarioNuevoExistente);
                            }

                        }
                        else {
                            $('#requerido-contraseña').removeClass('ocultarCarga');
                        }
                    }
                }
                else {
                    $('#error-email').removeClass('ocultarCarga');
                    $('#error-email').append("*El Email es Requerido");
                }
            }
        });

        $("#PermisoID").change(function () {
            $('#btn-agregarusuario-guardar').removeClass('ocultarCarga');
        });


        function cargarDatosUsuarios(Email, PermisoID, Contraseña, UsuarioNuevoExistente) {
            MostrarCarga();
             $.ajax({
                type: "POST",
                url: '@Url.Action("GuardarDatosUsuario")',
                data: { Email: Email, PermisoID: PermisoID, Contraseña: Contraseña, PersonaID: personaRealID , UsuarioNuevoExistente: UsuarioNuevoExistente},
                success: function (data) {

                    $('#error-email').empty();

                    $('#requerido-contraseña').addClass('ocultarCarga');
                    $('#corto-contraseña').addClass('ocultarCarga');
                    $('#longitud-minima').removeClass('ocultarCarga');

                    if (data.Resultado == 0) {
                        $('#error-email').addClass('ocultarCarga');
                        $('#email-usuario').val(data.Email);
                        //$('#contraseña-usuario').val(data.Contraseña);

                        if (data.Email != "") {
                            //bloquear escritura de email y contraseña.
                            document.getElementById('email-usuario').readOnly = true;

                            if (data.PermisoID != 0) {
                                $("#PermisoID option[value=" + data.PermisoID + "]").attr("selected", true);
                            }
                            //volvemos a abrir ese formulario
                            document.getElementById("agregar-usuario-existente").click();
                            $('#AgregarUsuario').val(2);

                            //al tener datos ocultamos el boton cancelar
                            $('#btn-agregarusuario-cancelar').addClass('ocultarCarga');

                            $("#pestaña-credenciales").css("display", "initial");
                            //debemos mostrar el boton eliminar usuario

                            if (data.Desvinculado == false) {
                                if (data.Editar == false) {
                                    $('#PermisoID').attr("disabled", true);
                                }
                                else {
                                    $('#PermisoID').attr("disabled", false);
                                }
                                if (data.Eliminar == true) {
                                    //MOSTRAR BOTON ELIMINAR
                                    $('#btn-agregarusuario-Eliminar').removeClass('ocultarCarga');
                                    $('#btn-agregarusuario-Vincular').addClass('ocultarCarga');
                                }

                                $('#email-usuario').removeClass('bordeRojoImporte');
                                $('#email-usuario').removeClass('importeRojo');

                                $('#PermisoID').removeClass('bordeRojoImporte');
                                $('#PermisoID').removeClass('importeRojo');
                            }
                            else {
                                //MOSTRAR BOTON VINCULAR
                                $('#email-usuario').addClass('bordeRojoImporte');
                                $('#email-usuario').addClass('importeRojo');
                                $('#PermisoID').attr("disabled", true);
                                $('#PermisoID').addClass('bordeRojoImporte');
                                $('#PermisoID').addClass('importeRojo');
                                $('#btn-agregarusuario-Eliminar').addClass('ocultarCarga');
                                $('#btn-agregarusuario-Vincular').removeClass('ocultarCarga');
                            }

                            $('#longitud-minima').addClass('ocultarCarga');

                            $('#btn-agregarusuario-guardar').addClass('ocultarCarga');
                        }
                    }
                    if (data.Resultado == 1) {
                        $('#error-email').removeClass('ocultarCarga');
                        $('#error-email').append("*Formato de Email no válido.");
                    }
                    if (data.Resultado == 2) {
                        $('#error-email').removeClass('ocultarCarga');
                        $('#error-email').append("*El Email ingresado ya se encuentra relacionado con otra persona de esta Empresa.");
                    }
                    if (data.Resultado == 3) {
                        $('#error-email').removeClass('ocultarCarga');
                        $('#error-email').append("*El Email ingresado ya existe.");
                    }
                    if (data.Resultado == 4) {
                        $('#error-email').removeClass('ocultarCarga');
                        $('#error-email').append("*El Email ingresado no existe.");
                    }
                    if (data.Resultado == 5) {
                        $('#error-email').removeClass('ocultarCarga');
                        $('#error-email').append("*Su plan ha llegado al límite de Usuarios.");
                    }

                    var permisoUsuarioLogueado = $("#PermisoUsuarioLogueado").val();
                    if (permisoUsuarioLogueado != 1) {
                        $('#div-datos-usuarios').addClass('ocultarCarga');
                        $('#mensaje-datos-usuarios').removeClass('ocultarCarga');
                    }
                    else {
                        $('#div-datos-usuarios').removeClass('ocultarCarga');
                        $('#mensaje-datos-usuarios').addClass('ocultarCarga');
                    }

                    setTimeout("detectarCarga();", 500);
                }
            });
        }
        //fin datos usuario

        window.onload = cargarDatosUsuarios(Email = "", PermisoID = 0, Contraseña = "", 0);

        $("#LocalidadNombre").autocomplete({
            dataType: 'JSON',
            source: function (request, response) {
                jQuery.ajax({
                    url: '/Localidades/BuscarLocalidad',
                    type: "post",
                    dataType: "json",
                    data: {
                        nombre: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                id: item.LocalidadID,
                                value: item.NombreVista
                            }
                        }))
                    }
                })
            },
            select: function (e, ui) {
                $("#LocalidadID").val(ui.item.id);
            }
        });

        window.onload = SeleccionaTipoDocumento();

            $("#TipoContribuyenteID").change(function () {
                BuscarTipoDocumento();
            });

        function BuscarTipoDocumento() {
            ActivarDesactivarDatosFiscales();
                //Se limpia el contenido del dropdownlist
                $("#TipoDocumentoID").empty();
                        $.ajax({
                            type: 'POST',
                            //Llamado al metodo GetDepartByGeren en el controlador
                            url: '@Url.Action("BuscarTipoDocumento")',
                            dataType: 'json',
                            //Parametros que se envian al metodo del controlador
                            data: { id: $("#TipoContribuyenteID").val() },
                            //En caso de resultado exitoso
                            success: function (TipoDocumentos) {
                                if (TipoDocumentos.length == 0) {
                                    $("#TipoDocumentoID").append('<option value="0">[No hay Tipo de documentos registrados]</option>');
                                }
                                else {
                                    $.each(TipoDocumentos, function (i, TipoDocumento) {
                                        $("#TipoDocumentoID").append('<option value="' + TipoDocumento.Value + '">' +
                                            TipoDocumento.Text + '</option>');
                                    });
                                    SeleccionaTipoDocumento();
                                }
                            },
                            ////Mensaje de error en caso de fallo
                            error: function (ex) {
                                swal({
                                    title: "ATENCIÓN",
                                    icon: "error",
                                    text: "Fallo la busqueda de Tipo de documentos." + ex,

                                    dangerMode: true,
                                    closeOnClickOutside: false,
                                    closeOnEsc: false,

                                    buttons: {
                                        confirm: {
                                            text: "Aceptar",
                                            value: true,
                                            visible: true,
                                            className: "",
                                            closeModal: true
                                        }
                                    },
                                });
                                //alert('Fallo la busqueda de Tipo de documentos.' + ex);
                            }
                        });
                        return false;
        };

        $("#TipoDocumentoID").change(function () {
                SeleccionaTipoDocumento();
        });

        function SeleccionaTipoDocumento() {
                //BLOQUEAR NROTIPODOCUMENTO O NO
                var tipoDocumentoID = $("#TipoDocumentoID").val();
                if (tipoDocumentoID == 99) {
                    $("#NroTipoDocumento").attr('disabled', 'true');
                }
                else {
                    $("#NroTipoDocumento").removeAttr('disabled', 'true');
                    DefinirMascara();
                }

        };

            function DefinirMascara() {
                var tipoDocumentoID = $("#TipoDocumentoID").val();
               if (tipoDocumentoID == 96) {
                    // Definimos las mascaras para cada input
                    $("#NroTipoDocumento").mask("99999999");
               }
                else {
                    // Definimos las mascaras para cada input
                    $("#NroTipoDocumento").mask("99-99999999-9");
               }
            }

    </script>
}